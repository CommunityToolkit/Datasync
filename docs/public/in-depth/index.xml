<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>In-depth :: Datasync Community Toolkit</title>
    <link>http://localhost:1313/Datasync/in-depth/index.html</link>
    <description>Offline data synchronization Offline data synchronization is a useful tool that synchronizes data from a cloud-based database to a Sqlite database stored with your application. When you app is offline, you can still create, modify, and search the data. Data is synchronized when your device is online.&#xA;Offline data synchronization has several benefits:&#xA;Improves app responsiveness Improves app reliability when there is bad network connectivity Limits network use on high-latency or metered networks Supports disconnected use.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/Datasync/in-depth/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Datasync Server</title>
      <link>http://localhost:1313/Datasync/in-depth/server/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/Datasync/in-depth/server/index.html</guid>
      <description>This article shows you how to configure and use the ASP.NET Core backend packages for the Datasync Community Toolkit to produce a datasync service.&#xA;A datasync service is a set of RESTful Web API controllers that implement “CRUD” (Create-Read-Update-Delete) with an OData v4 based search capability. Each table controller serves one entity that must conform to the requirements needed for offline usage.&#xA;Supported Platforms The ASP.NET Core packages support ASP.NET 8.</description>
    </item>
    <item>
      <title>Client application</title>
      <link>http://localhost:1313/Datasync/in-depth/client/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/Datasync/in-depth/client/index.html</guid>
      <description>This guide shows you how to perform common scenarios using the Datasync Community Toolkit. Use the client library in any .NET 8 application, including AvaloniaUI, MAUI, Uno Platform, WinUI, and WPF applications.&#xA;This guide primary deals with offline operations. For online operations, see the Online operations guide.&#xA;Creating an offline-capable DbContext Use the OfflineDbContext as the base for your offline storage:&#xA;public class AppDbContext(DbContextOptions&lt;AppDbContext&gt; options) : OfflineDbContext(options) { public DbSet&lt;TodoItem&gt; TodoItems =&gt; Set&lt;TodoItem&gt;(); protected override void OnDatasyncInitialization(DatasyncOfflineOptionsBuilder optionsBuilder) { HttpClientOptions clientOptions = new() { Endpoint = new Uri(&#34;https://YOURSITEHERE.</description>
    </item>
  </channel>
</rss>