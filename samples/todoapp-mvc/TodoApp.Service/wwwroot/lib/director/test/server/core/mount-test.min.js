/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/director@1.2.8/test/server/core/mount-test.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var assert=require("assert"),vows=require("vows"),director=require("../../../lib/director");function assertRoute(o,t,e){if(1===t.length)return assert.strictEqual(e[t.shift()],o);e=e[t.shift()],assert.isObject(e),assertRoute(o,t,e)}vows.describe("director/core/mount").addBatch({"An instance of director.Router":{"with no preconfigured params":{topic:new director.Router,"the mount() method":{"should sanitize the routes correctly":function(o){function t(){}function e(){}function r(){}function s(){}function u(){}var n=[t,e];o.mount({"/":{before:u,on:u,after:u,"/nesting":{on:t,"/deep":e}},"/foo":{"/bar":t,"/*":e,"/jitsu/then":{before:t}},"/foo/bazz":{"/buzz":r},"/foo/jitsu":{"/then":n},"/foo/jitsu/then/now":e,"/foo/:dog":s}),assertRoute(u,["on"],o.routes),assertRoute(u,["after"],o.routes),assertRoute(u,["before"],o.routes),assertRoute(t,["nesting","on"],o.routes),assertRoute(e,["nesting","deep","on"],o.routes),assertRoute(t,["foo","bar","on"],o.routes),assertRoute(e,["foo","([_.()!\\ %@&a-zA-Z0-9-]+)","on"],o.routes),assertRoute(n,["foo","jitsu","then","on"],o.routes),assertRoute(t,["foo","jitsu","then","before"],o.routes),assertRoute(r,["foo","bazz","buzz","on"],o.routes),assertRoute(e,["foo","jitsu","then","now","on"],o.routes),assertRoute(s,["foo","([._a-zA-Z0-9-%()]+)","on"],o.routes)},"should accept string path":function(o){function t(){}o.mount({"/dogs":{on:t}},"/api"),assertRoute(t,["api","dogs","on"],o.routes)}}},"with preconfigured params":{topic:function(){var o=new director.Router;return o.param("city","([\\w\\-]+)"),o.param(":country",/([A-Z][A-Za-z]+)/),o.param(":zip",/([\d]{5})/),o},"should sanitize the routes correctly":function(o){function t(){}function e(){}o.mount({"/usa/:city/:zip":t,"/world":{"/:country":{"/:city/:zip":e}}}),assertRoute(t,["usa","([\\w\\-]+)","([\\d]{5})","on"],o.routes),assertRoute(e,["world","([A-Z][A-Za-z]+)","([\\w\\-]+)","([\\d]{5})","on"],o.routes)}}}}).export(module);
//# sourceMappingURL=/sm/161dad1880ef3d83a2de30ddf976f186673a87df0d17295e6f9b0fc8bf4ee72e.map