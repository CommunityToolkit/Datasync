/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/handlebars@4.7.8/lib/handlebars/internal/proto-access.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{createNewLookupObject}from"./create-new-lookup-object";import logger from"../logger";const loggedProperties=Object.create(null);export function createProtoAccessControl(e){let t=Object.create(null);t.constructor=!1,t.__defineGetter__=!1,t.__defineSetter__=!1,t.__lookupGetter__=!1;let o=Object.create(null);return o.__proto__=!1,{properties:{whitelist:createNewLookupObject(o,e.allowedProtoProperties),defaultValue:e.allowProtoPropertiesByDefault},methods:{whitelist:createNewLookupObject(t,e.allowedProtoMethods),defaultValue:e.allowProtoMethodsByDefault}}}export function resultIsAllowed(e,t,o){return checkWhiteList("function"==typeof e?t.methods:t.properties,o)}function checkWhiteList(e,t){return void 0!==e.whitelist[t]?!0===e.whitelist[t]:void 0!==e.defaultValue?e.defaultValue:(logUnexpecedPropertyAccessOnce(t),!1)}function logUnexpecedPropertyAccessOnce(e){!0!==loggedProperties[e]&&(loggedProperties[e]=!0,logger.log("error",`Handlebars: Access has been denied to resolve the property "${e}" because it is not an "own property" of its parent.\nYou can add a runtime option to disable the check or this warning:\nSee https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`))}export function resetLoggedProperties(){Object.keys(loggedProperties).forEach((e=>{delete loggedProperties[e]}))}
//# sourceMappingURL=/sm/a5a32aec8333d5313b79ce788905e2d39bba5026a6b4df625c6c801edd98fbe0.map