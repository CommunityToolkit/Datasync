/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/handlebars@4.7.8/lib/handlebars/compiler/helpers.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Exception from"../exception";function validateClose(t,e){if(e=e.path?e.path.original:e,t.path.original!==e){let r={loc:t.path.loc};throw new Exception(t.path.original+" doesn't match "+e,r)}}export function SourceLocation(t,e){this.source=t,this.start={line:e.first_line,column:e.first_column},this.end={line:e.last_line,column:e.last_column}}export function id(t){return/^\[.*\]$/.test(t)?t.substring(1,t.length-1):t}export function stripFlags(t,e){return{open:"~"===t.charAt(2),close:"~"===e.charAt(e.length-3)}}export function stripComment(t){return t.replace(/^\{\{~?!-?-?/,"").replace(/-?-?~?\}\}$/,"")}export function preparePath(t,e,r){r=this.locInfo(r);let o=t?"@":"",a=[],n=0;for(let t=0,p=e.length;t<p;t++){let p=e[t].part,i=e[t].original!==p;if(o+=(e[t].separator||"")+p,i||".."!==p&&"."!==p&&"this"!==p)a.push(p);else{if(a.length>0)throw new Exception("Invalid path: "+o,{loc:r});".."===p&&n++}}return{type:"PathExpression",data:t,depth:n,parts:a,original:o,loc:r}}export function prepareMustache(t,e,r,o,a,n){let p=o.charAt(3)||o.charAt(2),i="{"!==p&&"&"!==p;return{type:/\*/.test(o)?"Decorator":"MustacheStatement",path:t,params:e,hash:r,escaped:i,strip:a,loc:this.locInfo(n)}}export function prepareRawBlock(t,e,r,o){validateClose(t,r);let a={type:"Program",body:e,strip:{},loc:o=this.locInfo(o)};return{type:"BlockStatement",path:t.path,params:t.params,hash:t.hash,program:a,openStrip:{},inverseStrip:{},closeStrip:{},loc:o}}export function prepareBlock(t,e,r,o,a,n){o&&o.path&&validateClose(t,o);let p,i,l=/\*/.test(t.open);if(e.blockParams=t.blockParams,r){if(l)throw new Exception("Unexpected inverse block on decorator",r);r.chain&&(r.program.body[0].closeStrip=o.strip),i=r.strip,p=r.program}return a&&(a=p,p=e,e=a),{type:l?"DecoratorBlock":"BlockStatement",path:t.path,params:t.params,hash:t.hash,program:e,inverse:p,openStrip:t.strip,inverseStrip:i,closeStrip:o&&o.strip,loc:this.locInfo(n)}}export function prepareProgram(t,e){if(!e&&t.length){const r=t[0].loc,o=t[t.length-1].loc;r&&o&&(e={source:r.source,start:{line:r.start.line,column:r.start.column},end:{line:o.end.line,column:o.end.column}})}return{type:"Program",body:t,strip:{},loc:e}}export function preparePartialBlock(t,e,r,o){return validateClose(t,r),{type:"PartialBlockStatement",name:t.path,params:t.params,hash:t.hash,program:e,openStrip:t.strip,closeStrip:r&&r.strip,loc:this.locInfo(o)}}
//# sourceMappingURL=/sm/48ea432d936cb5f692e104bc11001988b6c13c3f92b1720655142fda7a5ae344.map