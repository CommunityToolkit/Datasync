{
  "openapi": "3.0.1",
  "info": {
    "title": "CommunityToolkit.Datasync.Server.OpenApi.Test | v1",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost/"
    }
  ],
  "paths": {
    "/tables/kitchenreader": {
      "get": {
        "tags": [
          "KitchenReader"
        ],
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "Whether to include the total count of items matching the query in the result",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The comma-separated list of ordering instructions to apply to the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The comma-separated list of fields to return in the results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of items to skip",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to return",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "__includeDeleted",
            "in": "query",
            "description": "Include deleted items in the response ('true' or 'false').",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/tables/kitchenreader/{id}": {
      "get": {
        "tags": [
          "KitchenReader"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "__includeDeleted",
            "in": "query",
            "description": "Include deleted items in the response ('true' or 'false').",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "ETag value to conditionally fetch the entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Timestamp to conditionally fetch the entity",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "404": {
            "description": "Not Found"
          },
          "410": {
            "description": "Gone"
          }
        }
      }
    },
    "/tables/kitchensink": {
      "post": {
        "tags": [
          "KitchenSink"
        ],
        "requestBody": {
          "description": "The entity to process.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "KitchenSink"
        ],
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "Whether to include the total count of items matching the query in the result",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The comma-separated list of ordering instructions to apply to the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The comma-separated list of fields to return in the results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of items to skip",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to return",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "__includeDeleted",
            "in": "query",
            "description": "Include deleted items in the response ('true' or 'false').",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/tables/kitchensink/{id}": {
      "delete": {
        "tags": [
          "KitchenSink"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag value to conditionally fetch the entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Timestamp to conditionally fetch the entity",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "410": {
            "description": "Gone"
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "KitchenSink"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "__includeDeleted",
            "in": "query",
            "description": "Include deleted items in the response ('true' or 'false').",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "ETag value to conditionally fetch the entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Timestamp to conditionally fetch the entity",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "404": {
            "description": "Not Found"
          },
          "410": {
            "description": "Gone"
          }
        }
      },
      "put": {
        "tags": [
          "KitchenSink"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "__includeDeleted",
            "in": "query",
            "description": "Include deleted items in the response ('true' or 'false').",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag value to conditionally fetch the entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Timestamp to conditionally fetch the entity",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "The entity to process.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "410": {
            "description": "Gone"
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/tables/TodoItem": {
      "post": {
        "tags": [
          "TodoItem"
        ],
        "requestBody": {
          "description": "The entity to process.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TodoItem"
        ],
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "Whether to include the total count of items matching the query in the result",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The comma-separated list of ordering instructions to apply to the query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "The comma-separated list of fields to return in the results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of items to skip",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to return",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "__includeDeleted",
            "in": "query",
            "description": "Include deleted items in the response ('true' or 'false').",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/tables/TodoItem/{id}": {
      "delete": {
        "tags": [
          "TodoItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag value to conditionally fetch the entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Timestamp to conditionally fetch the entity",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "410": {
            "description": "Gone"
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TodoItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "__includeDeleted",
            "in": "query",
            "description": "Include deleted items in the response ('true' or 'false').",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "ETag value to conditionally fetch the entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Timestamp to conditionally fetch the entity",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "404": {
            "description": "Not Found"
          },
          "410": {
            "description": "Gone"
          }
        }
      },
      "put": {
        "tags": [
          "TodoItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "__includeDeleted",
            "in": "query",
            "description": "Include deleted items in the response ('true' or 'false').",
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag value to conditionally fetch the entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Timestamp to conditionally fetch the entity",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "The entity to process.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "410": {
            "description": "Gone"
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "headers": {
              "ETag": {
                "description": "The ETag value for the entity",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "The last modified timestamp for the entity",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": { },
  "tags": [
    {
      "name": "KitchenReader"
    },
    {
      "name": "KitchenSink"
    },
    {
      "name": "TodoItem"
    }
  ]
}